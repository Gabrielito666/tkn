var I=(r,d)=>()=>(d||r((d={exports:{}}).exports,d),d.exports);var X=I(($e,c0)=>{c0.exports={reset:"\x1B[0m",white:"\x1B[97m",cyan:"\x1B[96m",red:"\x1B[91m"}});var r0=I((Ne,t0)=>{var D0=require("readline"),{EventEmitter:B0}=require("events"),a0=X(),O0=r=>new Promise(d=>{process.stdout.write(r+`
`),process.stdin.setRawMode(!0),process.stdin.resume(),process.stdin.setEncoding("utf8");let b="";process.stdin.on("data",function u(p){p==="\r"||p===`
`?(process.stdout.write(`
`),process.stdin.setRawMode(!1),process.stdin.pause(),process.stdin.removeListener("data",u),d(b)):p===""?(process.stdout.write(`
`),process.exit()):p==="\x7F"?b.length>0&&(b=b.slice(0,-1),process.stdout.write("\b \b")):(b+=p,process.stdout.write("*"))})});function k0(r){let d=D0.createInterface({input:process.stdin,output:process.stdout});return new Promise(b=>d.question(r,u=>{d.close(),b(u)}))}var K=class extends B0{constructor(){super(),this.listen()}listen(){process.stdin.setRawMode(!0),process.stdin.resume(),process.stdin.setEncoding("utf8"),process.stdin.on("data",d=>{d==="\x1B[A"?this.emit("up"):d==="\x1B[B"?this.emit("down"):d===""?process.exit(0):d===`
`||d==="\r"?this.emit("enter"):this.emit("key",d)})}stop(){process.stdin.setRawMode(!1),process.stdin.pause()}},H0=new K,$0=(...r)=>new Promise((d,b)=>{console.clear();let u={index:0,options:r},p=new K,i=()=>{console.clear(),r.forEach((v,g)=>{g===u.index?console.log(`> ${a0.cyan}${v}`):console.log(`  ${a0.white}${v}`)})};p.on("up",()=>{u.index=(u.index-1+r.length)%r.length,i()}),p.on("down",()=>{u.index=(u.index+1)%r.length,i()}),p.on("enter",v=>{p.stop(),d(r[u.index])}),i()});t0.exports={input:k0,inputPassword:O0,KeyListener:K,keyListener:H0,select:$0}});var k=I((Le,o0)=>{var{createHash:N0,randomBytes:n0}=require("crypto"),L0=r=>{try{return N0("sha256").update(r).digest()}catch(d){throw new Error("error in lek-cryptools when trying to encrypt the key: "+d.message)}},P0=()=>n0(16),d0=(r=64)=>n0(r).toString("hex"),K0=(r=64)=>new Promise((d,b)=>{try{let u=d0(r);d(u)}catch(u){b(u)}});o0.exports={getKeyFromSecret:L0,getIV:P0,getUniqueKey:K0,getUniqueKeySync:d0}});var H=I((Pe,b0)=>{var M=class extends Error{constructor(d,b){super("Error in lek-cryptools "+d+": "+b.message)}},M0={CIPHER:r=>new M("when trying to cipher the key",r),DECIPHER:r=>new M("when trying to decipher the key",r),LekCryptoolsError:M};b0.exports=M0});var u0=I((Ke,s0)=>{var{createCipheriv:j0}=require("crypto"),{getKeyFromSecret:G0,getIV:V0}=k(),W0=H(),i0=(r,d)=>{try{let b=G0(d);if(b.length!==32)throw new Error("Invalid key. system need a 32 bits key");let u=Buffer.isBuffer(r),p=u?r:Buffer.from(r),i=V0(),v=j0("aes-256-cbc",b,i),g=Buffer.concat([v.update(p),v.final()]),m=Buffer.concat([i,g]);return u?m:m.toString("hex")}catch(b){throw W0.CIPHER(b)}},X0=(r,d)=>new Promise((b,u)=>{try{let p=i0(r,d);b(p)}catch(p){u(p)}});s0.exports={cipherSync:i0,cipher:X0}});var h0=I((Me,p0)=>{var{createDecipheriv:J0}=require("crypto"),{getKeyFromSecret:z0}=k(),Y0=H(),l0=(r,d)=>{try{let b=Buffer.isBuffer(r),u=b?r:Buffer.from(r,"hex");if(u.length<16)throw new Error("invalid format");let p=u.slice(0,16),i=u.slice(16),v=z0(d);if(v.length!==32)throw new Error("Invalid key length");let g=J0("aes-256-cbc",v,p),m=Buffer.concat([g.update(i),g.final()]);return b?m:m.toString()}catch(b){throw Y0.DECIPHER(b)}},Q0=(r,d)=>new Promise((b,u)=>{try{let p=l0(r,d);b(p)}catch(p){u(p)}});p0.exports={decipher:Q0,decipherSync:l0}});var g0=I((y0,A)=>{(function(r,d){typeof define=="function"&&define.amd?define([],d):typeof require=="function"&&typeof A=="object"&&A&&A.exports?A.exports=d():(r.dcodeIO=r.dcodeIO||{}).bcrypt=d()})(y0,function(){"use strict";var r={},d=null;function b(a){if(typeof A<"u"&&A&&A.exports)try{return require("crypto").randomBytes(a)}catch{}try{var c;return(self.crypto||self.msCrypto).getRandomValues(c=new Uint32Array(a)),Array.prototype.slice.call(c)}catch{}if(!d)throw Error("Neither WebCryptoAPI nor a crypto module is available. Use bcrypt.setRandomFallback to set an alternative");return d(a)}var u=!1;try{b(1),u=!0}catch{}d=null,r.setRandomFallback=function(a){d=a},r.genSaltSync=function(a,c){if(a=a||N,typeof a!="number")throw Error("Illegal arguments: "+typeof a+", "+typeof c);a<4?a=4:a>31&&(a=31);var f=[];return f.push("$2a$"),a<10&&f.push("0"),f.push(a.toString()),f.push("$"),f.push(F(b(U),U)),f.join("")},r.genSalt=function(a,c,f){if(typeof c=="function"&&(f=c,c=void 0),typeof a=="function"&&(f=a,a=void 0),typeof a>"u")a=N;else if(typeof a!="number")throw Error("illegal arguments: "+typeof a);function x(e){i(function(){try{e(null,r.genSaltSync(a))}catch(t){e(t)}})}if(f){if(typeof f!="function")throw Error("Illegal callback: "+typeof f);x(f)}else return new Promise(function(e,t){x(function(n,s){if(n){t(n);return}e(s)})})},r.hashSync=function(a,c){if(typeof c>"u"&&(c=N),typeof c=="number"&&(c=r.genSaltSync(c)),typeof a!="string"||typeof c!="string")throw Error("Illegal arguments: "+typeof a+", "+typeof c);return W(a,c)},r.hash=function(a,c,f,x){function e(t){typeof a=="string"&&typeof c=="number"?r.genSalt(c,function(n,s){W(a,s,t,x)}):typeof a=="string"&&typeof c=="string"?W(a,c,t,x):i(t.bind(this,Error("Illegal arguments: "+typeof a+", "+typeof c)))}if(f){if(typeof f!="function")throw Error("Illegal callback: "+typeof f);e(f)}else return new Promise(function(t,n){e(function(s,o){if(s){n(s);return}t(o)})})};function p(a,c){for(var f=0,x=0,e=0,t=a.length;e<t;++e)a.charCodeAt(e)===c.charCodeAt(e)?++f:++x;return f<0?!1:x===0}r.compareSync=function(a,c){if(typeof a!="string"||typeof c!="string")throw Error("Illegal arguments: "+typeof a+", "+typeof c);return c.length!==60?!1:p(r.hashSync(a,c.substr(0,c.length-31)),c)},r.compare=function(a,c,f,x){function e(t){if(typeof a!="string"||typeof c!="string"){i(t.bind(this,Error("Illegal arguments: "+typeof a+", "+typeof c)));return}if(c.length!==60){i(t.bind(this,null,!1));return}r.hash(a,c.substr(0,29),function(n,s){n?t(n):t(null,p(s,c))},x)}if(f){if(typeof f!="function")throw Error("Illegal callback: "+typeof f);e(f)}else return new Promise(function(t,n){e(function(s,o){if(s){n(s);return}t(o)})})},r.getRounds=function(a){if(typeof a!="string")throw Error("Illegal arguments: "+typeof a);return parseInt(a.split("$")[2],10)},r.getSalt=function(a){if(typeof a!="string")throw Error("Illegal arguments: "+typeof a);if(a.length!==60)throw Error("Illegal hash length: "+a.length+" != 60");return a.substring(0,29)};var i=typeof process<"u"&&process&&typeof process.nextTick=="function"?typeof setImmediate=="function"?setImmediate:process.nextTick:setTimeout;function v(a){var c=[],f=0;return q.encodeUTF16toUTF8(function(){return f>=a.length?null:a.charCodeAt(f++)},function(x){c.push(x)}),c}var g="./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),m=[-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,54,55,56,57,58,59,60,61,62,63,-1,-1,-1,-1,-1,-1,-1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,-1,-1,-1,-1,-1,-1,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,-1,-1,-1,-1,-1],E=String.fromCharCode;function F(a,c){var f=0,x=[],e,t;if(c<=0||c>a.length)throw Error("Illegal len: "+c);for(;f<c;){if(e=a[f++]&255,x.push(g[e>>2&63]),e=(e&3)<<4,f>=c){x.push(g[e&63]);break}if(t=a[f++]&255,e|=t>>4&15,x.push(g[e&63]),e=(t&15)<<2,f>=c){x.push(g[e&63]);break}t=a[f++]&255,e|=t>>6&3,x.push(g[e&63]),x.push(g[t&63])}return x.join("")}function C(a,c){var f=0,x=a.length,e=0,t=[],n,s,o,l,h,y;if(c<=0)throw Error("Illegal len: "+c);for(;f<x-1&&e<c&&(y=a.charCodeAt(f++),n=y<m.length?m[y]:-1,y=a.charCodeAt(f++),s=y<m.length?m[y]:-1,!(n==-1||s==-1||(h=n<<2>>>0,h|=(s&48)>>4,t.push(E(h)),++e>=c||f>=x)||(y=a.charCodeAt(f++),o=y<m.length?m[y]:-1,o==-1)||(h=(s&15)<<4>>>0,h|=(o&60)>>2,t.push(E(h)),++e>=c||f>=x)));)y=a.charCodeAt(f++),l=y<m.length?m[y]:-1,h=(o&3)<<6>>>0,h|=l,t.push(E(h)),++e;var T=[];for(f=0;f<e;f++)T.push(t[f].charCodeAt(0));return T}var q=function(){"use strict";var a={};return a.MAX_CODEPOINT=1114111,a.encodeUTF8=function(c,f){var x=null;for(typeof c=="number"&&(x=c,c=function(){return null});x!==null||(x=c())!==null;)x<128?f(x&127):x<2048?(f(x>>6&31|192),f(x&63|128)):x<65536?(f(x>>12&15|224),f(x>>6&63|128),f(x&63|128)):(f(x>>18&7|240),f(x>>12&63|128),f(x>>6&63|128),f(x&63|128)),x=null},a.decodeUTF8=function(c,f){for(var x,e,t,n,s=function(o){o=o.slice(0,o.indexOf(null));var l=Error(o.toString());throw l.name="TruncatedError",l.bytes=o,l};(x=c())!==null;)if((x&128)===0)f(x);else if((x&224)===192)(e=c())===null&&s([x,e]),f((x&31)<<6|e&63);else if((x&240)===224)((e=c())===null||(t=c())===null)&&s([x,e,t]),f((x&15)<<12|(e&63)<<6|t&63);else if((x&248)===240)((e=c())===null||(t=c())===null||(n=c())===null)&&s([x,e,t,n]),f((x&7)<<18|(e&63)<<12|(t&63)<<6|n&63);else throw RangeError("Illegal starting byte: "+x)},a.UTF16toUTF8=function(c,f){for(var x,e=null;(x=e!==null?e:c())!==null;){if(x>=55296&&x<=57343&&(e=c())!==null&&e>=56320&&e<=57343){f((x-55296)*1024+e-56320+65536),e=null;continue}f(x)}e!==null&&f(e)},a.UTF8toUTF16=function(c,f){var x=null;for(typeof c=="number"&&(x=c,c=function(){return null});x!==null||(x=c())!==null;)x<=65535?f(x):(x-=65536,f((x>>10)+55296),f(x%1024+56320)),x=null},a.encodeUTF16toUTF8=function(c,f){a.UTF16toUTF8(c,function(x){a.encodeUTF8(x,f)})},a.decodeUTF8toUTF16=function(c,f){a.decodeUTF8(c,function(x){a.UTF8toUTF16(x,f)})},a.calculateCodePoint=function(c){return c<128?1:c<2048?2:c<65536?3:4},a.calculateUTF8=function(c){for(var f,x=0;(f=c())!==null;)x+=a.calculateCodePoint(f);return x},a.calculateUTF16asUTF8=function(c){var f=0,x=0;return a.UTF16toUTF8(c,function(e){++f,x+=a.calculateCodePoint(e)}),[f,x]},a}();Date.now=Date.now||function(){return+new Date};var U=16,N=10,V=16,U0=100,Z=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],S=[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946,1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055,3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504,976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462],e0=[1332899944,1700884034,1701343084,1684370003,1668446532,1869963892];function L(a,c,f,x){var e,t=a[c],n=a[c+1];return t^=f[0],e=x[t>>>24],e+=x[256|t>>16&255],e^=x[512|t>>8&255],e+=x[768|t&255],n^=e^f[1],e=x[n>>>24],e+=x[256|n>>16&255],e^=x[512|n>>8&255],e+=x[768|n&255],t^=e^f[2],e=x[t>>>24],e+=x[256|t>>16&255],e^=x[512|t>>8&255],e+=x[768|t&255],n^=e^f[3],e=x[n>>>24],e+=x[256|n>>16&255],e^=x[512|n>>8&255],e+=x[768|n&255],t^=e^f[4],e=x[t>>>24],e+=x[256|t>>16&255],e^=x[512|t>>8&255],e+=x[768|t&255],n^=e^f[5],e=x[n>>>24],e+=x[256|n>>16&255],e^=x[512|n>>8&255],e+=x[768|n&255],t^=e^f[6],e=x[t>>>24],e+=x[256|t>>16&255],e^=x[512|t>>8&255],e+=x[768|t&255],n^=e^f[7],e=x[n>>>24],e+=x[256|n>>16&255],e^=x[512|n>>8&255],e+=x[768|n&255],t^=e^f[8],e=x[t>>>24],e+=x[256|t>>16&255],e^=x[512|t>>8&255],e+=x[768|t&255],n^=e^f[9],e=x[n>>>24],e+=x[256|n>>16&255],e^=x[512|n>>8&255],e+=x[768|n&255],t^=e^f[10],e=x[t>>>24],e+=x[256|t>>16&255],e^=x[512|t>>8&255],e+=x[768|t&255],n^=e^f[11],e=x[n>>>24],e+=x[256|n>>16&255],e^=x[512|n>>8&255],e+=x[768|n&255],t^=e^f[12],e=x[t>>>24],e+=x[256|t>>16&255],e^=x[512|t>>8&255],e+=x[768|t&255],n^=e^f[13],e=x[n>>>24],e+=x[256|n>>16&255],e^=x[512|n>>8&255],e+=x[768|n&255],t^=e^f[14],e=x[t>>>24],e+=x[256|t>>16&255],e^=x[512|t>>8&255],e+=x[768|t&255],n^=e^f[15],e=x[n>>>24],e+=x[256|n>>16&255],e^=x[512|n>>8&255],e+=x[768|n&255],t^=e^f[16],a[c]=n^f[V+1],a[c+1]=t,a}function B(a,c){for(var f=0,x=0;f<4;++f)x=x<<8|a[c]&255,c=(c+1)%a.length;return{key:x,offp:c}}function x0(a,c,f){for(var x=0,e=[0,0],t=c.length,n=f.length,s,o=0;o<t;o++)s=B(a,x),x=s.offp,c[o]=c[o]^s.key;for(o=0;o<t;o+=2)e=L(e,0,c,f),c[o]=e[0],c[o+1]=e[1];for(o=0;o<n;o+=2)e=L(e,0,c,f),f[o]=e[0],f[o+1]=e[1]}function A0(a,c,f,x){for(var e=0,t=[0,0],n=f.length,s=x.length,o,l=0;l<n;l++)o=B(c,e),e=o.offp,f[l]=f[l]^o.key;for(e=0,l=0;l<n;l+=2)o=B(a,e),e=o.offp,t[0]^=o.key,o=B(a,e),e=o.offp,t[1]^=o.key,t=L(t,0,f,x),f[l]=t[0],f[l+1]=t[1];for(l=0;l<s;l+=2)o=B(a,e),e=o.offp,t[0]^=o.key,o=B(a,e),e=o.offp,t[1]^=o.key,t=L(t,0,f,x),x[l]=t[0],x[l+1]=t[1]}function f0(a,c,f,x,e){var t=e0.slice(),n=t.length,s;if(f<4||f>31)if(s=Error("Illegal number of rounds (4-31): "+f),x){i(x.bind(this,s));return}else throw s;if(c.length!==U)if(s=Error("Illegal salt length: "+c.length+" != "+U),x){i(x.bind(this,s));return}else throw s;f=1<<f>>>0;var o,l,h=0,y;Int32Array?(o=new Int32Array(Z),l=new Int32Array(S)):(o=Z.slice(),l=S.slice()),A0(c,a,o,l);function T(){if(e&&e(h/f),h<f)for(var O=Date.now();h<f&&(h=h+1,x0(a,o,l),x0(c,o,l),!(Date.now()-O>U0)););else{for(h=0;h<64;h++)for(y=0;y<n>>1;y++)L(t,y<<1,o,l);var w=[];for(h=0;h<n;h++)w.push((t[h]>>24&255)>>>0),w.push((t[h]>>16&255)>>>0),w.push((t[h]>>8&255)>>>0),w.push((t[h]&255)>>>0);if(x){x(null,w);return}else return w}x&&i(T)}if(typeof x<"u")T();else for(var P;;)if(typeof(P=T())<"u")return P||[]}function W(a,c,f,x){var e;if(typeof a!="string"||typeof c!="string")if(e=Error("Invalid string / salt: Not a string"),f){i(f.bind(this,e));return}else throw e;var t,n;if(c.charAt(0)!=="$"||c.charAt(1)!=="2")if(e=Error("Invalid salt version: "+c.substring(0,2)),f){i(f.bind(this,e));return}else throw e;if(c.charAt(2)==="$")t="\0",n=3;else{if(t=c.charAt(2),t!=="a"&&t!=="b"&&t!=="y"||c.charAt(3)!=="$")if(e=Error("Invalid salt revision: "+c.substring(2,4)),f){i(f.bind(this,e));return}else throw e;n=4}if(c.charAt(n+2)>"$")if(e=Error("Missing salt rounds"),f){i(f.bind(this,e));return}else throw e;var s=parseInt(c.substring(n,n+1),10)*10,o=parseInt(c.substring(n+1,n+2),10),l=s+o,h=c.substring(n+3,n+25);a+=t>="a"?"\0":"";var y=v(a),T=C(h,U);function P(O){var w=[];return w.push("$2"),t>="a"&&w.push(t),w.push("$"),l<10&&w.push("0"),w.push(l.toString()),w.push("$"),w.push(F(T,T.length)),w.push(F(O,e0.length*4-1)),w.join("")}if(typeof f>"u")return P(f0(y,T,l));f0(y,T,l,function(O,w){O?f(O,null):f(null,P(w))},x)}return r.encodeBase64=F,r.decodeBase64=C,r})});var J=I((je,w0)=>{w0.exports=g0()});var v0=I((Ge,m0)=>{var{hash:Z0,genSalt:S0,hashSync:ee,genSaltSync:xe}=J(),fe=async(r,d=10)=>Z0(r,await S0(d)),ce=(r,d=10)=>ee(r,xe(d));m0.exports={encrypt:fe,encryptSync:ce}});var I0=I((Ve,F0)=>{var{createCipheriv:ae}=require("crypto"),{getIV:te,getKeyFromSecret:re}=k(),{Transform:ne,pipeline:de}=require("stream"),E0=H(),oe=(r,d,b)=>new Promise((u,p)=>{try{let i=re(b);if(i.length!==32)throw new Error("Invalid key. system need a 32 bits key");let v=te();d.write(v);let g=ae("aes-256-cbc",i,v),m=new ne({transform(F,C,q){let U=g.update(F);q(null,U)},flush(F){try{F(null,g.final())}catch(C){F(C)}}});de(r,m,d,F=>{F?p(E0.CIPHER(F)):u()})}catch(i){p(E0.CIPHER(i))}});F0.exports=oe});var R0=I((We,T0)=>{var{createDecipheriv:be}=require("crypto"),{getKeyFromSecret:ie}=k(),{pipeline:se,Transform:ue}=require("stream"),_0=H(),le=(r,d,b)=>new Promise((u,p)=>{try{let i={iv:Buffer.alloc(0),ivIsReconstructed:!1,decipher_:void 0},v=ie(b),g=new ue({transform(E,F,C){if(i.ivIsReconstructed){let q=i.decipher_.update(E);C(null,q)}else{let q=16-i.iv.length;if(E.length>q){i.ivIsReconstructed=!0;let U=E.slice(0,q),N=E.slice(q);i.iv=Buffer.concat([i.iv,U]),i.decipher_=be("aes-256-cbc",v,i.iv);let V=i.decipher_.update(N);C(null,V)}else i.iv=Buffer.concat([i.iv,E]),C()}},flush(E){try{E(null,i.decipher_.final())}catch(F){E(F)}}});se(r,g,d,E=>{E?p(_0.DECIPHER(E)):u()})}catch(i){p(_0.DECIPHER(i))}});T0.exports=le});var q0=I((Xe,C0)=>{var{getUniqueKey:pe,getUniqueKeySync:he}=k(),{cipher:ye,cipherSync:ge}=u0(),{decipher:we,decipherSync:me}=h0(),{encrypt:ve,encryptSync:Ee}=v0(),{compare:Fe,compareSync:Ie}=J(),_e=I0(),Te=R0(),Re=H();C0.exports={getUniqueKey:pe,getUniqueKeySync:he,cipher:ye,cipherSync:ge,decipher:we,decipherSync:me,encrypt:ve,encryptSync:Ee,compare:Fe,compareSync:Ie,cipherStream:_e,decipherStream:Te,LekCryptoolsError:Re.LekCryptoolsError}});var Ce=require("path"),G=require("fs").promises,R=X(),D=r0(),z=q0(),qe=require("clipboardy"),j=Ce.join(process.env.TKN_PATH||process.cwd(),"data.enc"),_={password:null,data:null},Ue=async r=>{try{return await G.access(r),!0}catch{return!1}},Q=async r=>{let d=JSON.stringify(_.data),b=await z.cipher(Buffer.from(d,"utf-8"),_.password);await G.writeFile(j,b),console.log(r),await new Promise(u=>setTimeout(u,1e3))},Y=async()=>{await Ue(j)||await G.writeFile(j,Buffer.from(""));let r=await G.readFile(j);if(r.length===0){console.log(R.cyan+"Welcome to the password manager"),console.log(R.cyan+"Please enter your master password");let d=await D.inputPassword(R.cyan+"Enter your password: "),b=await D.inputPassword(R.cyan+"Confirm your password: ");if(d!==b)console.log(R.red+"Passwords do not match"),Y();else{_.password=d,_.data={tags:{}},await Q(R.cyan+"Password saved successfully");return}}else{console.log(R.cyan+"Welcome to the password manager");let d=await D.inputPassword(R.cyan+"Please enter your master password");try{let b=await z.decipher(r,d);if(_.data=JSON.parse(b),_.password=d,!_.data.tags)throw new Error("error in ciphred data");return}catch(b){if(b instanceof z.LekCryptoolsError)return console.log(R.red+"Incorrect password"),Y();throw b}}},Ae=async()=>{console.clear();let r=await D.input("tag of token: "),d=await D.inputPassword("token: ");return _.data.tags[r]=d,await Q(R.cyan+"all right!"),$()},De=async()=>{let r=await D.select(...Object.keys(_.data.tags),"__get back__");return r==="__get back__"||(delete _.data.tags[r],await Q("item is deleted")),$()},Be=async()=>{let r=await D.select(...Object.keys(_.data.tags),"__get back__");return r==="__get back__"||await qe.default.write(_.data.tags[r]),$()},Oe=async()=>{console.log(R.red+"Exiting..."),process.exit(0)},$=async()=>{console.clear();let r=await D.select("create tkn","delete tkn","get tkn","exit");({"create tkn":Ae,"delete tkn":De,"get tkn":Be,exit:Oe})[r]()},ke=async()=>{await Y(),await $()};ke();
/*! Bundled license information:

bcryptjs/dist/bcrypt.js:
  (**
   * @license bcrypt.js (c) 2013 Daniel Wirtz <dcode@dcode.io>
   * Released under the Apache License, Version 2.0
   * see: https://github.com/dcodeIO/bcrypt.js for details
   *)
*/
